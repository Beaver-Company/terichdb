Import("env")

nkEnv = env.Clone()
nkEnv.InjectThirdPartyIncludePaths(libraries=['wiredtiger'])
nkEnv.InjectThirdPartyIncludePaths(libraries=['zlib'])
nkEnv.InjectThirdPartyIncludePaths(libraries=['valgrind'])

terarkLib = ''
if GetOption('dbg') == 'on':
    terarkLib = ['terichdb-d', 'tbb_debug',
				 'terark-fsa_all-d']
else:
    terarkLib = ['terichdb-r', 'tbb',
				 'terark-fsa_all-r']

nkEnv.Library(
	target='storage_terichdb',
	source= [
        'terichdb_customization_hooks.cpp',
		'terichdb_global_options.cpp',
		'terichdb_init.cpp',
		'terichdb_index.cpp',
		'terichdb_kv_engine.cpp',
		'terichdb_record_store.cpp',
		'terichdb_size_storer.cpp',
		'terichdb_server_status.cpp',
		'terichdb_recovery_unit.cpp',
		'terichdb_parameters.cpp',
		'record_codec.cpp',
		],
	LIBDEPS= [
		'$BUILD_DIR/mongo/base',
		'$BUILD_DIR/mongo/db/namespace_string',
		'$BUILD_DIR/mongo/db/catalog/collection_options',
		'$BUILD_DIR/mongo/db/concurrency/write_conflict_exception',
		'$BUILD_DIR/mongo/db/index/index_descriptor',
		'$BUILD_DIR/mongo/db/service_context',
		'$BUILD_DIR/mongo/db/storage/index_entry_comparison',
		'$BUILD_DIR/mongo/db/storage/key_string',
		'$BUILD_DIR/mongo/db/storage/oplog_hack',
		'$BUILD_DIR/mongo/db/storage/storage_options',
        '$BUILD_DIR/mongo/db/storage/kv/kv_engine',
        '$BUILD_DIR/mongo/db/storage/storage_engine_lock_file',
        '$BUILD_DIR/mongo/db/storage/storage_engine_metadata',
		'$BUILD_DIR/mongo/util/elapsed_tracker',
		'$BUILD_DIR/mongo/util/foundation',
		'$BUILD_DIR/mongo/util/processinfo',
		'$BUILD_DIR/mongo/util/concurrency/ticketholder',
		'$BUILD_DIR/third_party/shim_wiredtiger',
		'$BUILD_DIR/third_party/shim_snappy',
		'$BUILD_DIR/third_party/shim_zlib',
		],
    LIBDEPS_DEPENDENTS=['$BUILD_DIR/mongo/db/serveronly'],

    #LIBPATH = [ tlibPath ],
	SYSLIBDEPS= terarkLib
	)

