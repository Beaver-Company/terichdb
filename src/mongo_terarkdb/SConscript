Import("env")

AddOption('--terarkdb-home',
    dest='terarkdb-home',
    type='string',
    nargs=1,
    action='store',
    metavar='DIR',
    help='terarkdb installation home directory')

AddOption('--terarkdb-include',
    dest='terarkdb-include',
    type='string',
    nargs=1,
    action='store',
    metavar='DIR',
    help='terarkdb include directory')

AddOption('--terarkdb-lib',
    dest='terarkdb-lib',
    type='string',
    nargs=1,
    action='store',
    metavar='DIR',
    help='terarkdb static/dynamic lib directory')

nkEnv = env.Clone()
nkEnv.InjectThirdPartyIncludePaths(libraries=['wiredtiger'])
nkEnv.InjectThirdPartyIncludePaths(libraries=['zlib'])
nkEnv.InjectThirdPartyIncludePaths(libraries=['valgrind'])

tlibPath = ''
if GetOption('terarkdb-home'):
    nkEnv.Append(CPPPATH=[GetOption('terarkdb-home') + '/include'])
    nkEnv.Append(LIBPATH=[GetOption('terarkdb-home') + 'lib'])
    tlibPath = GetOption('terarkdb-home') + '/lib'

if GetOption('terarkdb-include'):
    nkEnv.Append(CPPPATH=[GetOption('terarkdb-include')])

print("tlibPath=" + tlibPath + " , fucking mongodb&scons bitch can not add LIBPATH")

if GetOption('terarkdb-lib'):
    nkEnv.Append(LIBPATH=[GetOption('terarkdb-lib')])
    tlibPath = GetOption('terarkdb-lib')

terarkLib = ''
if GetOption('dbg') == 'on':
    terarkLib = ['terark-db-d', 'tbb_debug',
				 'terark-fsa_all-d']
else:
    terarkLib = ['terark-db-r', 'tbb',
				 'terark-fsa_all-r']

nkEnv.Library(
	target='storage_terarkdb',
	source= [
        'terarkdb_customization_hooks.cpp',
		'terarkdb_global_options.cpp',
		'terarkdb_init.cpp',
		'terarkdb_index.cpp',
		'terarkdb_kv_engine.cpp',
		'terarkdb_record_store.cpp',
		'terarkdb_size_storer.cpp',
		'terarkdb_server_status.cpp',
		'terarkdb_recovery_unit.cpp',
		'terarkdb_parameters.cpp',
		'record_codec.cpp',
		],
	LIBDEPS= [
		'$BUILD_DIR/mongo/base',
		'$BUILD_DIR/mongo/db/namespace_string',
		'$BUILD_DIR/mongo/db/catalog/collection_options',
		'$BUILD_DIR/mongo/db/concurrency/write_conflict_exception',
		'$BUILD_DIR/mongo/db/index/index_descriptor',
		'$BUILD_DIR/mongo/db/service_context',
		'$BUILD_DIR/mongo/db/storage/index_entry_comparison',
		'$BUILD_DIR/mongo/db/storage/key_string',
		'$BUILD_DIR/mongo/db/storage/oplog_hack',
		'$BUILD_DIR/mongo/db/storage/storage_options',
        '$BUILD_DIR/mongo/db/storage/kv/kv_engine',
        '$BUILD_DIR/mongo/db/storage/storage_engine_lock_file',
        '$BUILD_DIR/mongo/db/storage/storage_engine_metadata',
		'$BUILD_DIR/mongo/util/elapsed_tracker',
		'$BUILD_DIR/mongo/util/foundation',
		'$BUILD_DIR/mongo/util/processinfo',
		'$BUILD_DIR/mongo/util/concurrency/ticketholder',
		'$BUILD_DIR/third_party/shim_wiredtiger',
		'$BUILD_DIR/third_party/shim_snappy',
		'$BUILD_DIR/third_party/shim_zlib',
		],
    LIBDEPS_DEPENDENTS=['$BUILD_DIR/mongo/db/serveronly'],

    #LIBPATH = [ tlibPath ],
	SYSLIBDEPS= terarkLib
	)

